{
  "hash": "d0a5029e043f77016f723e4874584aa1",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take Home Exercise 02\"\nauthor: \"Pan Mingwei\"\ndate: \"September 24, 2024\"\ndate-modified: \"last-modified\"\nexecute: \n  eval: true\n  echo: true\n  warning: false\n  cache: true\n  freeze: true\nformat: \n  html: \n    code-fold: false\n    code-summary: \"Click to expand/collapse code\"\n---\n\n\n\n# 1. Overview\n\nDrug abuse is associated with significant negative health, financial and social consequences. Yet, illicit drug consumption remains highly prevalent and continues to be a growing problem worldwide. In 2021, 1 in 17 people aged 15–64 in the world had used a drug in the past 12 months. Notwithstanding population growth, the estimated number of drug users grew from 240 million in 2011 to 296 million in 2021.\n\nThe geopolitics of Thailand which is near the [Golden Triangle](https://en.wikipedia.org/wiki/Golden_Triangle_(Southeast_Asia)) of Indochina, the largest drug production site in Asia, and the constant transportation infrastructure development made Thailand became market and transit routes for drug trafficking to the third countries.\n\nIn Thailand, drug abuse is one of the major social issue. There are about 2.7 million youths using drugs in Thailand. Among youths aged between 15 and 19 years, there are about 300,000 who have needs for drug treatment. Most of Thai youths involved with drugs are vocational-school students, which nearly doubles in number compared to secondary-school students.\n\n## 1.1 The Objective\n\nThis take-home exercise will focus on determining:\n\n-   if the key indicators of drug abuse of Thailand are independent from space.\n\n-   If the indicators of drug abuse is indeed spatial dependent, then, identify where are the clusters and outliers, and the hotspots.\n\n-   Last, investigate how the observation above evolve over time.\n\n## 1.2 The Task\n\n-   Use **sf** and **tidyverse** to prepare the geospatial data layer:\n\n    -   a study area layer of province level(including Bangkok).\n\n    -   a drug abuse indicators layer within the study area.\n\n-   Perform Global Spatial Autocorrelation Analysis using **sfdep**.\n\n-   Perform Local Spatial Autocorrelation Analysis using **sfdep**.\n\n-   Analysis the spatial patterns.\n\n## 1.3 The Data\n\n-   [Thailand Drug Offenses \\[2017-2022\\]](https://www.kaggle.com/datasets/thaweewatboy/thailand-drug-offenses-2017-2022) at Kaggle.\n\n-   [Thailand - Subnational Administrative Boundaries](https://data.humdata.org/dataset/cod-ab-tha?) at HDX. You are required to use the province boundary data set.\n\n# 2. Getting Started\n\n## 2.1 Load R Packages\n\n-   **sf** is use for importing and handling geospatial data in R,\n\n-   **tidyverse** is mainly use for wrangling attribute data in R,\n\n-   **sfped,** builds on the great shoulders of spdep package for spatial dependence. sfdep creates an sf and tidyverse friendly interface\n\n-   **tmap** will be used to prepare cartographic quality choropleth map.\n\n-   **gridExtra**, will be used to arrange grid-based plot, such as ggplot.\n\n-   **plotly**, will be used to plot interactive graphs.\n\n-   **Kendall**, computes the Kendall rank correlation and Mann-Kendall trend test.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sf, sfdep, tmap, tidyverse, gridExtra, plotly,Kendall)\n```\n:::\n\n\n\n## 2.2 Load the Data\n\n### 2.2.1 Geospatial Data\n\nLoading the Thailand_Subnational_Administrative1_Boundaries dataset, which contain the province boundary including Bandkok of Thailand. Using `st_read()` of **sf** package.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nthailand_sf <- st_read(dsn = \"data/geospatial\", \n                 layer = \"Thailand_Subnational_Administrative1_Boundaries\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `Thailand_Subnational_Administrative1_Boundaries' from data source `/Users/mingwei/Desktop/SMU/Y3S1/IS415/xXxPMWxXx/IS415-GAA/Take-home_Ex/Take-home_Ex02/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 77 features and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 97.34336 ymin: 5.613038 xmax: 105.637 ymax: 20.46507\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n\n\nThere are 77 geographic features, which aligns with expectations. This includes 76 provinces at the first-order administrative level and the capital city, Bangkok.\n\nNext, lets visualise **thailand_sf** using **tmap** package.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode(\"plot\")\ntm_shape(thailand_sf)+\n  tm_fill(col=\"white\")+\n  tm_borders(col = \"black\", lwd=0.5, alpha=0.5)+\n  tm_layout(\n    main.title = \"Thailand Provinces (including Bandkok)\",\n    main.title.size = 1.5,\n    main.title.position = \"center\",\n    legend.show = FALSE,\n     frame = FALSE)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-3-1.png){width=1152}\n:::\n:::\n\n\n\n### 2.2.2 Aspatial Data\n\nLoad Thailand drug offenses\\[2017 - 2022\\] dataset, using **`read_csv()`** from **readr** package.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndrug <- read_csv(\"data/aspatial/thai_drug_offenses_2017_2022.csv\")\n```\n:::\n\n\n\n# 3. Data Wrangling\n\n## 3.1 Remove Columns\n\nAs there some columns that would not be useful in our analysis. Therefore, it is good practice by removing those column.\n\nBefore we removing the column. Lets list down the column for the two data set.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncolnames(thailand_sf)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"Shape_Leng\" \"Shape_Area\" \"ADM1_EN\"    \"ADM1_TH\"    \"ADM1_PCODE\"\n [6] \"ADM1_REF\"   \"ADM1ALT1EN\" \"ADM1ALT2EN\" \"ADM1ALT1TH\" \"ADM1ALT2TH\"\n[11] \"ADM0_EN\"    \"ADM0_TH\"    \"ADM0_PCODE\" \"date\"       \"validOn\"   \n[16] \"validTo\"    \"geometry\"  \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncolnames(drug)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"fiscal_year\"            \"types_of_drug_offenses\" \"no_cases\"              \n[4] \"province_th\"            \"province_en\"           \n```\n\n\n:::\n:::\n\n\n\nBased on the columns list on the two dataset and after browsing the data, the following fields I will keep:\n\n-   thailand_sf\n\n    -   ADM1_EN (common field with the drug dataset) =\\> column 3\n\n    -   geometry =\\> column 17\n\n-   drug\n\n    -   fiscal_year =\\> column 1\n\n    -   types_of_drug_offenses =\\> column 2\n\n    -   no_cases =\\> column 3\n\n    -   province_en =\\> column 5\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nthailand_sf <- thailand_sf %>%\n  select(\"province_en\" = 3,17) # change the ADM1_EN to province_en\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndrug <- drug %>%\n  select(1:3,5)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsum(apply(drug, 1, function(x) any(is.na(x))))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0\n```\n\n\n:::\n:::\n\n\n\n## 3.2 Checking the common field\n\nSince we need to join the two datasets, it’s important to ensure that all the values in the common column match correctly.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncheck_match <- setdiff(thailand_sf$province_en, drug$province_en)\ncheck_match # print the mismatch field in thailand_sf\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Lop Buri\"  \"Bueng Kan\"\n```\n\n\n:::\n\n```{.r .cell-code}\ncheck_match <- setdiff(drug$province_en, thailand_sf$province_en)\ncheck_match # print the mismatch field in drug\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Loburi\"  \"buogkan\"\n```\n\n\n:::\n:::\n\n\n\nI observe that two provinces have names in different formats (\"Lop Buri\" and \"Bueng Kan\"). Let's modify the values in the `drug` dataset to match the naming convention used in the `thailand_sf` dataset.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndrug <- drug %>%\n  mutate(province_en = case_when(\n    province_en == \"Loburi\" ~ \"Lop Buri\",\n    province_en == \"buogkan\" ~ \"Bueng Kan\",\n    TRUE ~ province_en\n  ))\n```\n:::\n\n\n\nLets check, if there still have any mismatch.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncheck_match <- setdiff(thailand_sf$province_en, drug$province_en)\ncheck_match\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\ncharacter(0)\n```\n\n\n:::\n:::\n\n\n\n## 3.3 Checking Types of Drug Offenses\n\nAs in the dataset, there are many different types of drug offenses. In order to get better insight. I decide to further check in the column and see which are the type I should consider.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nunique_types <- unique(drug$types_of_drug_offenses)\nprint(unique_types)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"drug_use_cases\"                                        \n [2] \"suspects_in_drug_use_cases\"                            \n [3] \"possession_cases\"                                      \n [4] \"suspects_in_possession_cases\"                          \n [5] \"possession_with_intent_to_distribute_cases\"            \n [6] \"suspects_in_possession_with_intent_to_distribute_cases\"\n [7] \"trafficking_cases\"                                     \n [8] \"suspects_in_trafficking_cases\"                         \n [9] \"production_cases\"                                      \n[10] \"suspects_in_production_cases\"                          \n[11] \"import_cases\"                                          \n[12] \"suspects_in_import_cases\"                              \n[13] \"export_cases\"                                          \n[14] \"suspects_in_export_cases\"                              \n[15] \"conspiracy_cases\"                                      \n[16] \"suspects_in_conspiracy_cases\"                          \n```\n\n\n:::\n:::\n\n\n\nTo get a better sense of the field, and decide which type I should focus on. I will group the type using the code chunk.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndrug_counts <- drug %>%\n  group_by(types_of_drug_offenses) %>%\n  summarise(total_cases = sum(no_cases, na.rm = TRUE),, .groups = 'drop')\n```\n:::\n\n\n\nTo visualise the data.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(drug_counts, aes(x = types_of_drug_offenses, y = total_cases, fill = types_of_drug_offenses)) +\n  geom_bar(stat = \"identity\") +  # Use stat = \"identity\" for summarized data\n  labs(title = \"Total Cases of Drug Offenses by Type\",\n       x = \"Types of Drug Offenses\",\n       y = \"Total Cases\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels for better visibility\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-15-1.png){width=1152}\n:::\n:::\n\n\n\nBased on the plot, we can observe that **drug use cases** and **suspects in possession cases** have been the most common offenses over the years. However, since possession cases may not accurately reflect the severity of drug abuse in Thailand, my analysis will focus on drug use cases. This approach provides more reliable data on the prevalence and severity of drug abuse in each province, as actual drug use offers clearer indicators of abuse trends. By narrowing the scope to drug use cases, I aim to draw more precise conclusions about the drug abuse situation in Thailand from 2017 to 2022.\n\nThe following code chunk filters the dataset to retain only the `drug_use_cases`, ensuring that the analysis focuses solely on actual drug use incidents.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndrug_use_cases <- drug %>%\n  filter(types_of_drug_offenses == \"drug_use_cases\")\n```\n:::\n\n\n\nSince, there is no mismatch in the province_en column, we can combine both data frame using **`left_join()`** of **dplyr** package.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndrug_use_cases <- left_join(thailand_sf, drug_use_cases)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(drug_use_cases,\"data/rds/drug_use_cases.rds\")\n```\n:::\n\n\n\nLets visualising the drug use case over the years.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode(\"plot\")\ntm_shape(drug_use_cases) +\n  tm_fill(\"no_cases\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"total_cases\") +\n  tm_layout(main.title = \"Distribution of drug use cases\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_facets(by = \"fiscal_year\", free.coords = FALSE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-19-1.png){width=1152}\n:::\n:::\n\n\n\n# 4. Global Measures of Spatial Autocorrelation\n\nTo evaluate the overall degree of spatial dependence (autocorrelation) across the entire study area for each year.\n\n## 4.1 Global Moran's I Test\n\nI decided to use Queen contiguity for the neighbors, as it shares both edges and corners, providing a more comprehensive result in helping me determine whether the drug use cases are independent of their locations.\n\nI've observed that Phuket(67) is an island, which means that `st_contiguity` cannot identify any polygon neighbors for it. Therefore, I will set allow_zero to be TRUE.\n\n![](website_img/Phuket_location.jpg){fig-align=\"center\"}\n\n::: panel-tabset\n## 2017\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\n# Deriving Queen’s contiguity weights\nwm_q_2017 <- drug_use_cases %>%\n  filter(fiscal_year == 2017) %>%\n  mutate(nb = st_contiguity(geometry),\n         wt = st_weights(nb,\n                         style = \"W\", allow_zero = TRUE),\n         .before = 1)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nglobal_moran_test(wm_q_2017$no_cases,\n                       wm_q_2017$nb,\n                       wm_q_2017$wt,\n                       zero.policy = TRUE,)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMoran I test under randomisation\n\ndata:  x  \nweights: listw  \nn reduced by no-neighbour observations  \n\nMoran I statistic standard deviate = 1.5049, p-value = 0.06618\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.077263424      -0.013333333       0.003624223 \n```\n\n\n:::\n:::\n\n\n\nThe results show an I value of 0.077, is close to zero, and a p-value of 0.06618, which exceeds the alpha level of 0.05. Therefore, we **do not have sufficient statistical evidence** to reject the null hypothesis, indicating that the spatial distribution of drug use cases in Thailand was random in 2017.\n\nTo strengthen the finding, we can run Monte carlo simulation to perform the statistical test.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nset.seed(1234) # To ensure reproducible\nmoran_mc_2017_res = global_moran_perm(wm_q_2017$no_cases,\n                       wm_q_2017$nb,\n                       wm_q_2017$wt,\n                        nsim=999,\n                       zero.policy = TRUE,)\nmoran_mc_2017_res\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.077263, observed rank = 922, p-value = 0.156\nalternative hypothesis: two.sided\n```\n\n\n:::\n:::\n\n\n\nFrom the simulation results, we can observed that the p-value have increased, which further indicate that we **cannot reject** the null hypothesis.\n\nLets check the summary statistics using **summary()** function.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nsummary(moran_mc_2017_res$res)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n-0.14280 -0.05100 -0.02104 -0.01239  0.02079  0.20105 \n```\n\n\n:::\n:::\n\n\n\nTo visualise the monte-carlo simulation, we can plot a histogram. The statistic I value for 2017 was 0.07 which fall under the random section of the simulation result. As such, we **cannot reject** the null hypothesis.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nggplot() + \n  aes(moran_mc_2017_res$res[1:999]) + \n  geom_histogram(colour=\"black\", fill=\"grey\") +\n  geom_vline(xintercept = 0, color = \"red\", linetype = \"solid\", size = 1) +\n  labs(title = \"Histogram of Simulated Moran's I For Thailand Drug Use Cases 2017\",\n       x = \"Simulated Moran's I\",\n       y = \"Frequency\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-24-1.png){width=1152}\n:::\n:::\n\n\n\n## 2018\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\n# Deriving Queen’s contiguity weights\nwm_q_2018 <- drug_use_cases %>%\n  filter(fiscal_year == 2018) %>%\n  mutate(nb = st_contiguity(geometry),\n         wt = st_weights(nb,\n                         style = \"W\", allow_zero = TRUE),\n         .before = 1)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nglobal_moran_test(wm_q_2018$no_cases,\n                       wm_q_2018$nb,\n                       wm_q_2018$wt,\n                       zero.policy = TRUE,)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMoran I test under randomisation\n\ndata:  x  \nweights: listw  \nn reduced by no-neighbour observations  \n\nMoran I statistic standard deviate = 1.673, p-value = 0.04716\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.091283835      -0.013333333       0.003910294 \n```\n\n\n:::\n:::\n\n\n\nFrom the above result with I = 0.09 and the p-value = 0.4716 is smaller than alpha value of 0.05. Hence, we have statistical evidence to **reject** the null hypothesis and since the I value is positive but close to 0, so we can infer that the spatial distribution shows a **weak sign of clustering** in 2018.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nset.seed(1234) # To ensure reproducible\nmoran_mc_2018_res = global_moran_perm(wm_q_2018$no_cases,\n                       wm_q_2018$nb,\n                       wm_q_2018$wt,\n                        nsim=999,\n                       zero.policy = TRUE,)\nmoran_mc_2018_res\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.091284, observed rank = 944, p-value = 0.112\nalternative hypothesis: two.sided\n```\n\n\n:::\n:::\n\n\n\nHowever, based on the simulation, we can observed that the p-value has become larger than the alpha value of 0.05. Hence, based on the simulation result, we **do not have statistical evidence** to **reject** the null hypothesis that the spatial distribution of drug use case in Thailand are resemble random distribution for Year 2018.\n\nTo check the summary statistics.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nsummary(moran_mc_2018_res$res)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n-0.14516 -0.05257 -0.01834 -0.01137  0.02357  0.26485 \n```\n\n\n:::\n:::\n\n\n\nBased on the histogram, the result similar to Year 2017, the statistic I value still fall under the random section(0.09). As such, we **cannot reject** the null hypothesis.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nggplot() + \n  aes(moran_mc_2018_res$res[1:999]) + \n  geom_histogram(colour=\"black\", fill=\"grey\") +\n  geom_vline(xintercept = 0, color = \"red\", linetype = \"solid\", size = 1) +\n  labs(title = \"Histogram of Simulated Moran's I For Thailand Drug Use Cases 2018\",\n       x = \"Simulated Moran's I\",\n       y = \"Frequency\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-29-1.png){width=1152}\n:::\n:::\n\n\n\n## 2019\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\n# Deriving Queen’s contiguity weights\nwm_q_2019 <- drug_use_cases %>%\n  filter(fiscal_year == 2019) %>%\n  mutate(nb = st_contiguity(geometry),\n         wt = st_weights(nb,\n                         style = \"W\", allow_zero = TRUE),\n         .before = 1)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nglobal_moran_test(wm_q_2019$no_cases,\n                       wm_q_2019$nb,\n                       wm_q_2019$wt,\n                       zero.policy = TRUE,)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMoran I test under randomisation\n\ndata:  x  \nweights: listw  \nn reduced by no-neighbour observations  \n\nMoran I statistic standard deviate = 2.1385, p-value = 0.01624\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.138046280      -0.013333333       0.005010889 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nset.seed(1234) # To ensure reproducible\nmoran_mc_2019_res = global_moran_perm(wm_q_2019$no_cases,\n                       wm_q_2019$nb,\n                       wm_q_2019$wt,\n                        nsim=999,\n                       zero.policy = TRUE,)\nmoran_mc_2019_res\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.13805, observed rank = 972, p-value = 0.056\nalternative hypothesis: two.sided\n```\n\n\n:::\n:::\n\n\n\nBased on the Moran I test and simulation result, we can observed that the p-value have become larger than 0.05 in the statistical test. Hence, we **do not have enough statistical evidence** to reject the null hypothesis that the spatial distribution of drug use case in Thailand are resemble random distribution for Year 2019. However, notice that the p-value is actually very close to the alpha value of 0.05, so based on this, we can infer that even we do not have enough statistical evidence to reject the null hypothesis, but it also give us insight that the drug use case in 2019, is probably higher than Year 2017 and 2018.\n\nCheck the summary statistics.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nsummary(moran_mc_2019_res$res)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n-0.15737 -0.05923 -0.01686 -0.01095  0.02767  0.31845 \n```\n\n\n:::\n:::\n\n\n\nBased on the histogram, we can observed that the statistic I value of 0.13 fall under the random section but very close to the alpha-value section.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nggplot() + \n  aes(moran_mc_2019_res$res[1:999]) + \n  geom_histogram(colour=\"black\", fill=\"grey\") +\n  geom_vline(xintercept = 0, color = \"red\", linetype = \"solid\", size = 1) +\n  labs(title = \"Histogram of Simulated Moran's I For Thailand Drug Use Cases 2019\",\n       x = \"Simulated Moran's I\",\n       y = \"Frequency\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-34-1.png){width=1152}\n:::\n:::\n\n\n\n## 2020\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\n# Deriving Queen’s contiguity weights\nwm_q_2020 <- drug_use_cases %>%\n  filter(fiscal_year == 2020) %>%\n  mutate(nb = st_contiguity(geometry),\n         wt = st_weights(nb,\n                         style = \"W\", allow_zero = TRUE),\n         .before = 1)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nglobal_moran_test(wm_q_2020$no_cases,\n                       wm_q_2020$nb,\n                       wm_q_2020$wt,\n                       zero.policy = TRUE,)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMoran I test under randomisation\n\ndata:  x  \nweights: listw  \nn reduced by no-neighbour observations  \n\nMoran I statistic standard deviate = 1.382, p-value = 0.08349\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.087091664      -0.013333333       0.005280586 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nset.seed(1234) # To ensure reproducible\nmoran_mc_2020_res = global_moran_perm(wm_q_2020$no_cases,\n                       wm_q_2020$nb,\n                       wm_q_2020$wt,\n                        nsim=999,\n                       zero.policy = TRUE,)\nmoran_mc_2020_res\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.087092, observed rank = 924, p-value = 0.152\nalternative hypothesis: two.sided\n```\n\n\n:::\n:::\n\n\n\nBased on the Moran I test and simulation result, we can observed that the p-value have become larger than 0.05 in the statistical test. Hence, we **do not have enough statistical evidence** to reject the null hypothesis that the spatial distribution of drug use case in Thailand are resemble random distribution for Year 2020.\n\nThe summary of the simulation statistics.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nsummary(moran_mc_2020_res$res)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n-0.15929 -0.06243 -0.02218 -0.01433  0.02699  0.33025 \n```\n\n\n:::\n:::\n\n\n\nBased on the histogram of the simulation, shows that the statistic I value of 0.08, fall in the random section.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nggplot() + \n  aes(moran_mc_2020_res$res[1:999]) + \n  geom_histogram(colour=\"black\", fill=\"grey\") +\n  geom_vline(xintercept = 0, color = \"red\", linetype = \"solid\", size = 1) +\n  labs(title = \"Histogram of Simulated Moran's I For Thailand Drug Use Cases 2020\",\n       x = \"Simulated Moran's I\",\n       y = \"Frequency\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-39-1.png){width=1152}\n:::\n:::\n\n\n\n## 2021\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\n# Deriving Queen’s contiguity weights\nwm_q_2021 <- drug_use_cases %>%\n  filter(fiscal_year == 2021) %>%\n  mutate(nb = st_contiguity(geometry),\n         wt = st_weights(nb,\n                         style = \"W\", allow_zero = TRUE),\n         .before = 1)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nglobal_moran_test(wm_q_2021$no_cases,\n                       wm_q_2021$nb,\n                       wm_q_2021$wt,\n                       zero.policy = TRUE,)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMoran I test under randomisation\n\ndata:  x  \nweights: listw  \nn reduced by no-neighbour observations  \n\nMoran I statistic standard deviate = 2.862, p-value = 0.002105\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n       0.20376109       -0.01333333        0.00575372 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nset.seed(1234) # To ensure reproducible\nmoran_mc_2021_res = global_moran_perm(wm_q_2021$no_cases,\n                       wm_q_2021$nb,\n                       wm_q_2021$wt,\n                        nsim=999,\n                       zero.policy = TRUE,)\nmoran_mc_2021_res\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.20376, observed rank = 993, p-value = 0.014\nalternative hypothesis: two.sided\n```\n\n\n:::\n:::\n\n\n\nBased on the Moran I test and simulation result, we can observed that the p-value is still smaller than 0.05 in the statistical test. Hence, we **have enough statistical evidence** to reject the null hypothesis that the spatial distribution of drug use case in Thailand are not resemble random distribution for Year 2021. Since I is positive value of 0.2, hence we can infer that the spatial distribution of drag use in Thailand in 2021 shows sign of **weak clustering**.\n\nTo check the simulation statisitcs.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nsummary(moran_mc_2021_res$res)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n-0.23519 -0.06340 -0.01754 -0.01333  0.03027  0.29476 \n```\n\n\n:::\n:::\n\n\n\nBased on the histogram, our statistic I value of 0.20376 falls under the alpha-value range. Hence, we can reject the null hypothesis and can infer there is a weak sign of spatial autocorrelation in the drug use case across different locations.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nggplot() + \n  aes(moran_mc_2021_res$res[1:999]) + \n  geom_histogram(colour=\"black\", fill=\"grey\") +\n  geom_vline(xintercept = 0, color = \"red\", linetype = \"solid\", size = 1) +\n  labs(title = \"Histogram of Simulated Moran's I For Thailand Drug Use Cases 2021\",\n       x = \"Simulated Moran's I\",\n       y = \"Frequency\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-44-1.png){width=1152}\n:::\n:::\n\n\n\n## 2022\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\n# Deriving Queen’s contiguity weights\nwm_q_2022 <- drug_use_cases %>%\n  filter(fiscal_year == 2022) %>%\n  mutate(nb = st_contiguity(geometry),\n         wt = st_weights(nb,\n                         style = \"W\", allow_zero = TRUE),\n         .before = 1)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nglobal_moran_test(wm_q_2022$no_cases,\n                       wm_q_2022$nb,\n                       wm_q_2022$wt,\n                       zero.policy = TRUE,)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMoran I test under randomisation\n\ndata:  x  \nweights: listw  \nn reduced by no-neighbour observations  \n\nMoran I statistic standard deviate = 2.7688, p-value = 0.002813\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.197931897      -0.013333333       0.005822019 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nset.seed(1234) # To ensure reproducible\nmoran_mc_2022_res = global_moran_perm(wm_q_2022$no_cases,\n                       wm_q_2022$nb,\n                       wm_q_2022$wt,\n                        nsim=999,\n                       zero.policy = TRUE,)\nmoran_mc_2022_res\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.19793, observed rank = 994, p-value = 0.012\nalternative hypothesis: two.sided\n```\n\n\n:::\n:::\n\n\n\nSimilar to Year 2021, we can observed that the p-value is still smaller than 0.05 in the statistical test. Hence, we **have enough statistical evidence** to reject the null hypothesis that the spatial distribution of drug use case in Thailand are not resemble random distribution for Year 2022 and shows sign of **weak clustering**.\n\nLets check the summary statistics.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nsummary(moran_mc_2022_res$res[1:999])\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n-0.21825 -0.05910 -0.01462 -0.01072  0.03411  0.30446 \n```\n\n\n:::\n:::\n\n\n\nTo visualise the monte-carlo simulation, we can plot a histogram. The statistic I value for 2022 was 0.19 which fall under the alpha-value of the simulation result. As such, we can infer there is a weak sign of spatial autocorrelation in the drug use case across different locations.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nggplot() + \n  aes(moran_mc_2022_res$res[1:999]) + \n  geom_histogram(colour=\"black\", fill=\"grey\") +\n  geom_vline(xintercept = 0, color = \"red\", linetype = \"solid\", size = 1) +\n  labs(title = \"Histogram of Simulated Moran's I For Thailand Drug Use Cases 2022\",\n       x = \"Simulated Moran's I\",\n       y = \"Frequency\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-49-1.png){width=1152}\n:::\n:::\n\n\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(wm_q_2017,\"data/rds/wm_q_2017.rds\")\nwrite_rds(wm_q_2018,\"data/rds/wm_q_2018.rds\")\nwrite_rds(wm_q_2019,\"data/rds/wm_q_2019.rds\")\nwrite_rds(wm_q_2020,\"data/rds/wm_q_2020.rds\")\nwrite_rds(wm_q_2021,\"data/rds/wm_q_2021.rds\")\nwrite_rds(wm_q_2022,\"data/rds/wm_q_2022.rds\")\n```\n:::\n\n\n\n## 4.2 Global Moran's I Test Overall Insight\n\n::: callout-tip\n## Overall Observation\n\n-   Overall, we can observed that from the **Year 2017 to 2019**, the trend are increasing in term of I value and decreasing in p-value. But the p-value over the three years are still larger than the alpha value of 0.05. Hence, we **do not have enough statistical evidence** to reject the null hypothesis that the spatial distribution of drug use case in Thailand are resemble random distribution.\n\n-   In the **Year** **2020**, the trend broke, with the I value decreasing instead of continuing to increase, and the p-value increasing instead of decreasing. This suggests a stronger indication of randomness in the distribution. I believe this change is due to COVID-19, which resulted in a decrease in recorded drug use cases.\n\n-   In the Year 2021 - 2022, there are enough statistical evidence to reject the null hypothesis and we can infer that the spatial distribution of drug use cases **shows sign of weak clustering.**\n\n-   Based on the histograms of the simulation results, we can observe that the distribution of the simulated Moran’s I values is predominantly skewed to the negative side, indicating that the data points exhibit a dispersed spatial pattern.\n:::\n\n## 4.3 Global Geary's C Test\n\nIn order to gain different insight into the spatial pattern of the drug use cases in Thailand. I will perform Global Geary's C as it focus more on local differences and more sensitive to local variability than Moran's I. Hence, it will be able to help to detect local variability and help in understand how strongly individual provinces deviate from the overall pattern in neighboring regions.\n\n::: panel-tabset\n## 2017\n\nTo performs Geary’s C test for spatial autocorrelation using [`global_c_test()`](https://sfdep.josiahparry.com/reference/global_c_test) from **sfdep** package.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nglobal_c_test(wm_q_2017$no_cases,\n              wm_q_2017$nb,\n              wm_q_2017$wt,\n              randomization = TRUE,\n              allow_zero=TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tGeary C test under randomisation\n\ndata:  x \nweights: listw  \nn reduced by no-neighbour observations \n\nGeary C statistic standard deviate = -0.18872, p-value = 0.5748\nalternative hypothesis: Expectation greater than statistic\nsample estimates:\nGeary C statistic       Expectation          Variance \n        1.0256614         1.0000000         0.0184905 \n```\n\n\n:::\n:::\n\n\n\nTo performs permutation test for Geary’s C statistic by using [`global_c_perm()`](https://sfdep.josiahparry.com/reference/global_c_perm) from **sfdep** packages.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nset.seed(1234)\ngeary_mc_2017_res = global_c_perm(wm_q_2017$no_cases,\n              wm_q_2017$nb,\n              wm_q_2017$wt,\n              nsim = 999,\n              allow_zero = TRUE,)\ngeary_mc_2017_res\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Geary C\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 1000 \n\nstatistic = 1.0257, observed rank = 629, p-value = 0.629\nalternative hypothesis: greater\n```\n\n\n:::\n:::\n\n\n\nBased on the above actual and simulation statistic, with C = 1.0257, the drug use cases exhibits a slight tendency toward spatial dispersion, but the result is very close to 1, indicating near-randomness. The large simulated p-value(0.629) suggests that the spatial distribution is likely random, and there is **no significant evidence** of spatial autocorrelation in 2017.\n\nTo visvualising the Monte Carlo Geary's C.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nsummary(geary_mc_2017_res$res)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.3162  0.8991  0.9790  0.9845  1.0755  1.4784 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nggplot() + \n  aes(geary_mc_2017_res$res[1:999]) + \n  geom_histogram(colour=\"black\", fill=\"grey\") +\n  geom_vline(xintercept = 1, color = \"red\", linetype = \"solid\", size = 1) +\n  labs(title = \"Histogram of Simulated  Geary C Values For Thailand Drug Use Cases 2017\",\n       x = \"Simulated  Geary C\",\n       y = \"Frequency\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-54-1.png){width=1152}\n:::\n:::\n\n\n\n## 2018\n\nTo performs Geary’s C test for spatial autocorrelation using [`global_c_test()`](https://sfdep.josiahparry.com/reference/global_c_test) from **sfdep** package.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nglobal_c_test(wm_q_2018$no_cases,\n              wm_q_2018$nb,\n              wm_q_2018$wt,\n              randomization = TRUE,\n              allow_zero=TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tGeary C test under randomisation\n\ndata:  x \nweights: listw  \nn reduced by no-neighbour observations \n\nGeary C statistic standard deviate = -0.026269, p-value = 0.5105\nalternative hypothesis: Expectation greater than statistic\nsample estimates:\nGeary C statistic       Expectation          Variance \n       1.00342511        1.00000000        0.01700099 \n```\n\n\n:::\n:::\n\n\n\nTo performs permutation test for Geary’s C statistic by using [`global_c_perm()`](https://sfdep.josiahparry.com/reference/global_c_perm) from **sfdep** packages.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nset.seed(1234)\ngeary_mc_2018_res = global_c_perm(wm_q_2018$no_cases,\n              wm_q_2018$nb,\n              wm_q_2018$wt,\n              nsim = 999,\n              allow_zero = TRUE,)\ngeary_mc_2018_res\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Geary C\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 1000 \n\nstatistic = 1.0034, observed rank = 582, p-value = 0.582\nalternative hypothesis: greater\n```\n\n\n:::\n:::\n\n\n\nBased on the above actual and simulation statistic, with C = 1.0034 and simulated p-value are very similar to Year 2017. Hence, we ca infer there is **no significant evidence** of spatial autocorrelation in 2018 as well.\n\nTo visvualising the Monte Carlo Geary's C.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nsummary(geary_mc_2018_res$res)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.3658  0.9025  0.9801  0.9838  1.0716  1.4479 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nggplot() + \n  aes(geary_mc_2018_res$res[1:999]) + \n  geom_histogram(colour=\"black\", fill=\"grey\") +\n  geom_vline(xintercept = 1, color = \"red\", linetype = \"solid\", size = 1) +\n  labs(title = \"Histogram of Simulated  Geary C Values For Thailand Drug Use Cases 2018\",\n       x = \"Simulated  Geary C\",\n       y = \"Frequency\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-58-1.png){width=1152}\n:::\n:::\n\n\n\n## 2019\n\nTo performs Geary’s C test for spatial autocorrelation using [`global_c_test()`](https://sfdep.josiahparry.com/reference/global_c_test) from **sfdep** package.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nglobal_c_test(wm_q_2019$no_cases,\n              wm_q_2019$nb,\n              wm_q_2019$wt,\n              randomization = TRUE,\n              allow_zero=TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tGeary C test under randomisation\n\ndata:  x \nweights: listw  \nn reduced by no-neighbour observations \n\nGeary C statistic standard deviate = 0.78768, p-value = 0.2154\nalternative hypothesis: Expectation greater than statistic\nsample estimates:\nGeary C statistic       Expectation          Variance \n       0.91637784        1.00000000        0.01127045 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nset.seed(1234)\ngeary_mc_2019_res = global_c_perm(wm_q_2019$no_cases,\n              wm_q_2019$nb,\n              wm_q_2019$wt,\n              nsim = 999,\n              allow_zero = TRUE,)\ngeary_mc_2019_res\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Geary C\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.91638, observed rank = 244, p-value = 0.244\nalternative hypothesis: greater\n```\n\n\n:::\n:::\n\n\n\nBased on the above actual and simulation statistic, with C = 0.91638, the drug use cases exhibits a slight tendency **toward spatial clustered,** but the result is close to 1, indicating near-randomness. The simulated p-value(0.224) which is larger than the alpha-value 0.05, suggests that the spatial distribution is likely random, and there is **not enough significant evidence** of spatial autocorrelation in 2019.\n\nTo visvualising the Monte Carlo Geary's C.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nsummary(geary_mc_2019_res$res)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.5495  0.9180  0.9862  0.9847  1.0591  1.3493 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nggplot() + \n  aes(geary_mc_2019_res$res[1:999]) + \n  geom_histogram(colour=\"black\", fill=\"grey\") +\n  geom_vline(xintercept = 1, color = \"red\", linetype = \"solid\", size = 1) +\n  labs(title = \"Histogram of Simulated  Geary C Values For Thailand Drug Use Cases 2019\",\n       x = \"Simulated  Geary C\",\n       y = \"Frequency\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-62-1.png){width=1152}\n:::\n:::\n\n\n\n## 2020\n\nTo performs Geary’s C test for spatial autocorrelation using [`global_c_test()`](https://sfdep.josiahparry.com/reference/global_c_test) from **sfdep** package.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nglobal_c_test(wm_q_2020$no_cases,\n              wm_q_2020$nb,\n              wm_q_2020$wt,\n              randomization = TRUE,\n              allow_zero=TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tGeary C test under randomisation\n\ndata:  x \nweights: listw  \nn reduced by no-neighbour observations \n\nGeary C statistic standard deviate = 0.47955, p-value = 0.3158\nalternative hypothesis: Expectation greater than statistic\nsample estimates:\nGeary C statistic       Expectation          Variance \n      0.952367243       1.000000000       0.009866203 \n```\n\n\n:::\n:::\n\n\n\nTo performs permutation test for Geary’s C statistic by using [`global_c_perm()`](https://sfdep.josiahparry.com/reference/global_c_perm) from **sfdep** packages.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nset.seed(1234)\ngeary_mc_2020_res = global_c_perm(wm_q_2020$no_cases,\n              wm_q_2020$nb,\n              wm_q_2020$wt,\n              nsim = 999,\n              allow_zero = TRUE,)\ngeary_mc_2020_res\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Geary C\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.95237, observed rank = 324, p-value = 0.324\nalternative hypothesis: greater\n```\n\n\n:::\n:::\n\n\n\nBased on the above actual and simulation statistic, with C = 0.95237 and the simulated p-value(0.324) similar to previous year (2020) suggests the drug use cases exhibits a slight tendency **toward spatial clustered** and the spatial distribution is likely random, and there is **not enough significant evidence** of spatial autocorrelation in 2020.\n\nTo visvualising the Monte Carlo Geary's C.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nsummary(geary_mc_2020_res$res)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.5720  0.9290  0.9944  0.9896  1.0558  1.3507 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nggplot() + \n  aes(geary_mc_2020_res$res[1:999]) + \n  geom_histogram(colour=\"black\", fill=\"grey\") +\n  geom_vline(xintercept = 1, color = \"red\", linetype = \"solid\", size = 1) +\n  labs(title = \"Histogram of Simulated  Geary C Values For Thailand Drug Use Cases 2020\",\n       x = \"Simulated  Geary C\",\n       y = \"Frequency\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-66-1.png){width=1152}\n:::\n:::\n\n\n\n## 2021\n\nTo performs Geary’s C test for spatial autocorrelation using [`global_c_test()`](https://sfdep.josiahparry.com/reference/global_c_test) from **sfdep** package.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nglobal_c_test(wm_q_2021$no_cases,\n              wm_q_2021$nb,\n              wm_q_2021$wt,\n              randomization = TRUE,\n              allow_zero=TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tGeary C test under randomisation\n\ndata:  x \nweights: listw  \nn reduced by no-neighbour observations \n\nGeary C statistic standard deviate = 1.8151, p-value = 0.03476\nalternative hypothesis: Expectation greater than statistic\nsample estimates:\nGeary C statistic       Expectation          Variance \n      0.843832653       1.000000000       0.007402704 \n```\n\n\n:::\n:::\n\n\n\nTo performs permutation test for Geary’s C statistic by using [`global_c_perm()`](https://sfdep.josiahparry.com/reference/global_c_perm) from **sfdep** packages.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nset.seed(1234)\ngeary_mc_2021_res = global_c_perm(wm_q_2021$no_cases,\n              wm_q_2021$nb,\n              wm_q_2021$wt,\n              nsim = 999,\n              allow_zero = TRUE,)\ngeary_mc_2021_res\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Geary C\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.84383, observed rank = 61, p-value = 0.061\nalternative hypothesis: greater\n```\n\n\n:::\n:::\n\n\n\nBased on the above actual and simulation statistic, with C = **0.84383** and actual p-value of **0.03476**, the drug use cases exhibits a slight tendency **toward spatial clustered** and we **can reject the null hypothesis** that the autocorrelation is unlikely to have occurred by random. However,the simulated p-value(**0.061**) which is larger than the alpha-value 0.05.\n\nThe difference between the actual p-value (0.034) and the simulated p-value (0.061) indicates that while the traditional test suggests **significant spatial clustering**, the Monte Carlo simulation shows **weaker evidence** for rejecting the null hypothesis of spatial randomness.\n\nTo visvualising the Monte Carlo Geary's C.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nsummary(geary_mc_2021_res$res)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.6844  0.9350  0.9918  0.9886  1.0443  1.2153 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nggplot() + \n  aes(geary_mc_2021_res$res[1:999]) + \n  geom_histogram(colour=\"black\", fill=\"grey\") +\n  geom_vline(xintercept = 1, color = \"red\", linetype = \"solid\", size = 1) +\n  labs(title = \"Histogram of Simulated  Geary C Values For Thailand Drug Use Cases 2021\",\n       x = \"Simulated  Geary C\",\n       y = \"Frequency\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-70-1.png){width=1152}\n:::\n:::\n\n\n\n## 2022\n\nTo performs Geary’s C test for spatial autocorrelation using [`global_c_test()`](https://sfdep.josiahparry.com/reference/global_c_test) from **sfdep** package.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nglobal_c_test(wm_q_2022$no_cases,\n              wm_q_2022$nb,\n              wm_q_2022$wt,\n              randomization = TRUE,\n              allow_zero=TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tGeary C test under randomisation\n\ndata:  x \nweights: listw  \nn reduced by no-neighbour observations \n\nGeary C statistic standard deviate = 1.9389, p-value = 0.02626\nalternative hypothesis: Expectation greater than statistic\nsample estimates:\nGeary C statistic       Expectation          Variance \n      0.837233817       1.000000000       0.007047089 \n```\n\n\n:::\n:::\n\n\n\nTo performs permutation test for Geary’s C statistic by using [`global_c_perm()`](https://sfdep.josiahparry.com/reference/global_c_perm) from **sfdep** packages.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nset.seed(1234)\ngeary_mc_2022_res = global_c_perm(wm_q_2022$no_cases,\n              wm_q_2022$nb,\n              wm_q_2022$wt,\n              nsim = 999,\n              allow_zero = TRUE,)\ngeary_mc_2022_res\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Geary C\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.83723, observed rank = 46, p-value = 0.046\nalternative hypothesis: greater\n```\n\n\n:::\n:::\n\n\n\nBased on the above actual and simulation statistic, unlike previous year(2021), with C = **0.83723** suggesting the drug use cases exhibits a slight tendency **toward spatial clustered.** With actual p-value of **0.2626** and simulated p-value of **0.046**, both is smaller than the alpha-value 0.05, hence, we **can reject the null hypothesis** that the autocorrelation is unlikely to have occurred by random and infer there is spatial autocorrelation of clustering in 2022.\n\nTo visvualising the Monte Carlo Geary's C.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nsummary(geary_mc_2022_res$res)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.6673  0.9333  0.9851  0.9845  1.0400  1.2253 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nggplot() + \n  aes(geary_mc_2022_res$res[1:999]) + \n  geom_histogram(colour=\"black\", fill=\"grey\") +\n  geom_vline(xintercept = 1, color = \"red\", linetype = \"solid\", size = 1) +\n  labs(title = \"Histogram of Simulated  Geary C Values For Thailand Drug Use Cases 2022\",\n       x = \"Simulated  Geary C\",\n       y = \"Frequency\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-74-1.png){width=1152}\n:::\n:::\n\n\n:::\n\n## 4.4 Global Geary's Test Overall Insight\n\n::: callout-tip\n## Overall Observation\n\n-   Overall, the trend of what we have observed from Global Geary's test is similar to Global Moran's I Test. Except for Year 2021.\n\n-   **Year 2017 to 2019**, decreasing trend in C value and p-value.\n\n-   **Year 2020**, instead of continuing decreasing, both C value and p-value increased.\n\n-   However**, for Year 2021**, the C value and actual p-value suggest spatial clustered and we can reject the null hypothesis, but the simulated p-value become larger than alpha-value of 0.05, which shows weak evidence for us to reject the null hypothesis.\n\n-   **Year 2022**, There is sufficient statistical evidence for us to reject the null hypothesis and conclude that there is spatial autocorrelation indicating clustering.\n:::\n\n# 5. Local Measures of Spatial Autocorrelation\n\n## 5.1 Local Moran's I Test\n\nAs there are 3 p-value fields, for consistency, I will use **p_ii_sim** field, since I will simulate 1000 times and it will help in ensure robustness in my finding\n\n::: panel-tabset\n## 2017\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nset.seed(1234)\nlisa_2017 <- wm_q_2017 %>% \n  mutate(local_moran = local_moran(\n    no_cases, nb, wt, nsim = 999,zero.policy = TRUE),\n         .before = 1) %>%\n  unnest(local_moran)\n```\n:::\n\n\n\nTo visualise local Moran's I and p-value.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\ntmap_mode(\"plot\")\nmap1 <- tm_shape(lisa_2017) +\n  tm_fill(\"ii\",\n          style = \"pretty\",\n          palette = \"BrBG\",\n          title = \"local moran statistics\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"local Moran's I of Drug Use Cases in 2017\",\n            main.title.size = 0.8)\n\nmap2 <- tm_shape(lisa_2017) +\n  tm_fill(\"p_ii_sim\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of local Moran's I in 2017\",\n            main.title.size = 0.8)\ntmap_arrange(map1, map2, ncol = 2)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-76-1.png){width=1152}\n:::\n:::\n\n\n\nWe can observe that the area around Bangkok contains local outliers, as the number of cases in Bangkok is significantly higher than in the surrounding areas, which have relatively low case numbers. Additionally, there are three provinces on the northern side of Bangkok that exhibit local clustering.\n\n## 2018\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nset.seed(1234)\nlisa_2018 <- wm_q_2018 %>% \n  mutate(local_moran = local_moran(\n    no_cases, nb, wt, nsim = 999,zero.policy = TRUE),\n         .before = 1) %>%\n  unnest(local_moran)\n```\n:::\n\n\n\nTo visualise local Moran's I and p-value.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\ntmap_mode(\"plot\")\nmap1 <- tm_shape(lisa_2018) +\n  tm_fill(\"ii\",\n          style = \"pretty\",\n          palette = \"BrBG\",\n          title = \"local moran statistics\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"local Moran's I of Drug Use Cases in 2018\",\n            main.title.size = 0.8)\n\nmap2 <- tm_shape(lisa_2018) +\n  tm_fill(\"p_ii_sim\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of local Moran's I in 2018\",\n            main.title.size = 0.8)\n\ntmap_arrange(map1, map2, ncol = 2)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-78-1.png){width=1152}\n:::\n:::\n\n\n\nWe can see that the some provinces( Samut Prakan,Chachoengsao) near Bangkok have p_ii_sim values are below the alpha level of 0.05, with nearly being positive for the I value, except for Samut Sakhon(left side of Bangkok) and Nonthaburi(top side of Bangkok), which has a negative I value, indicating it being the outlier.\n\n## 2019\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nset.seed(1234)\nlisa_2019 <- wm_q_2019 %>% \n  mutate(local_moran = local_moran(\n    no_cases, nb, wt, nsim = 999,zero.policy = TRUE),\n         .before = 1) %>%\n  unnest(local_moran)\n```\n:::\n\n\n\nTo visualise local Moran's I and p-value.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\ntmap_mode(\"plot\")\nmap1 <- tm_shape(lisa_2019) +\n  tm_fill(\"ii\",\n          style = \"pretty\",\n          palette = \"BrBG\",\n          title = \"local moran statistics\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"local Moran's I of Drug Use Cases in 2019\",\n            main.title.size = 0.8)\n\nmap2 <- tm_shape(lisa_2019) +\n  tm_fill(\"p_ii_sim\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of local Moran's I in 2019\",\n            main.title.size = 0.8)\n\ntmap_arrange(map1, map2, ncol = 2)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-80-1.png){width=1152}\n:::\n:::\n\n\n\nWe can observed that the drug use cases in 2019 , is quite similar to previous year (2018), except that Samut Sakhon is no longer an outlier. And we have two province on top of the northern side.\n\n## 2020\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nset.seed(1234)\nlisa_2020 <- wm_q_2020 %>% \n  mutate(local_moran = local_moran(\n    no_cases, nb, wt, nsim = 999,zero.policy = TRUE),\n         .before = 1) %>%\n  unnest(local_moran)\n```\n:::\n\n\n\nTo visualise local Moran's I and p-value.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\ntmap_mode(\"plot\")\nmap1 <- tm_shape(lisa_2020) +\n  tm_fill(\"ii\",\n          style = \"pretty\",\n          palette = \"BrBG\",\n          title = \"local moran statistics\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"local Moran's I of Drug Use Cases in 2020\",\n            main.title.size = 0.8)\n\nmap2 <- tm_shape(lisa_2020) +\n  tm_fill(\"p_ii_sim\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of local Moran's I in 2020\",\n            main.title.size = 0.8)\n\ntmap_arrange(map1, map2, ncol = 2)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-82-1.png){width=1152}\n:::\n:::\n\n\n\nFrom the map, we can observe that there are not many significant changes compared to previous years, except for one province in the central become a weak cluster(I value = 0 to 1).\n\n## 2021\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nset.seed(1234)\nlisa_2021 <- wm_q_2021 %>% \n  mutate(local_moran = local_moran(\n    no_cases, nb, wt, nsim = 999,zero.policy = TRUE),\n         .before = 1) %>%\n  unnest(local_moran)\n```\n:::\n\n\n\nTo visualise local Moran's I and p-value.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\ntmap_mode(\"plot\")\nmap1 <- tm_shape(lisa_2021) +\n  tm_fill(\"ii\",\n          style = \"pretty\",\n          palette = \"BrBG\",\n          title = \"local moran statistics\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"local Moran's I of Drug Use Cases in 2021\",\n            main.title.size = 0.8)\n\nmap2 <- tm_shape(lisa_2021) +\n  tm_fill(\"p_ii_sim\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of local Moran's I in 2021\",\n            main.title.size = 0.8)\n\ntmap_arrange(map1, map2, ncol = 2)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-84-1.png){width=1152}\n:::\n:::\n\n\n\nBased on the above plots,we can see a cluster at the western region.\n\n## 2022\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nset.seed(1234)\nlisa_2022 <- wm_q_2022 %>% \n  mutate(local_moran = local_moran(\n    no_cases, nb, wt, nsim = 999,zero.policy = TRUE),\n         .before = 1) %>%\n  unnest(local_moran)\n```\n:::\n\n\n\nTo visualise local Moran's I and p-value.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\ntmap_mode(\"plot\")\nmap1 <- tm_shape(lisa_2022) +\n  tm_fill(\"ii\",\n          style = \"pretty\",\n          palette = \"BrBG\",\n          title = \"local moran statistics\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"local Moran's I of Drug Use Cases in 2022\",\n            main.title.size = 0.8)\n\nmap2 <- tm_shape(lisa_2022) +\n  tm_fill(\"p_ii_sim\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of local Moran's I in 2022\",\n            main.title.size = 0.8)\n\ntmap_arrange(map1, map2, ncol = 2)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-86-1.png){width=1152}\n:::\n:::\n\n\n\nThe plots for 2022 reveal distinct clustering areas in both the Northeast and Central regions, characterized by predominantly positive I values and p-values below the alpha threshold of 0.05. Additionally, there are two notable outliers: one located in the southern region and another in the northeastern region adjacent to the cluster.\n:::\n\n::: callout-tip\n## Overall Insight\n\n-   From **2017 to 2020,** the p-values below 0.05 are primarily concentrated near the Bangkok area and central region, indicating that outliers (with negative I values) and clusters (with positive I values) are likely located in this region.\n\n-   In **2021** and **2022**, there are clear sign of clustering and in 2022, there are two outliers as well.\n:::\n\n## 5.2 Local Indicators of Spatial Association(LISA)\n\nWe can utilize the LISA Cluster Map to highlight statistically significant areas, making it easier to identify spatial autocorrelation patterns in the data.\n\nAfter examining the skewness of the LISA for each year, the distribution of skewness appears to be **negatively skewed** (left side has more values than the positive side). Therefore, I will use the **median** for the LISA map analysis and filter by **p_ii_sim** value.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nlibrary(gridExtra)\n\nplot_2017 <- ggplot(lisa_2017, aes(x = skewness)) + \n  geom_histogram(colour = \"black\", fill = \"grey\", bins = 30) +\n  labs(x = \"Skewness\", y = \"Frequency\", title = \"Skewness in 2017\") +\n  theme_minimal()\n\nplot_2018 <- ggplot(lisa_2018, aes(x = skewness)) + \n  geom_histogram(colour = \"black\", fill = \"grey\", bins = 30) +\n  labs(x = \"Skewness\", y = \"Frequency\", title = \"Skewness in 2018\") +\n  theme_minimal()\n\nplot_2019 <- ggplot(lisa_2019, aes(x = skewness)) + \n  geom_histogram(colour = \"black\", fill = \"grey\", bins = 30) +\n  labs(x = \"Skewness\", y = \"Frequency\", title = \"Skewness in 2019\") +\n  theme_minimal()\n\nplot_2020 <- ggplot(lisa_2020, aes(x = skewness)) + \n  geom_histogram(colour = \"black\", fill = \"grey\", bins = 30) +\n  labs(x = \"Skewness\", y = \"Frequency\", title = \"Skewness in 2020\") +\n  theme_minimal()\n\nplot_2021 <- ggplot(lisa_2021, aes(x = skewness)) + \n  geom_histogram(colour = \"black\", fill = \"grey\", bins = 30) +\n  labs(x = \"Skewness\", y = \"Frequency\", title = \"Skewness in 2021\") +\n  theme_minimal()\n\nplot_2022 <- ggplot(lisa_2022, aes(x = skewness)) + \n  geom_histogram(colour = \"black\", fill = \"grey\", bins = 30) +\n  labs(x = \"Skewness\", y = \"Frequency\", title = \"Skewness in 2022\") +\n  theme_minimal()\n\n# Arrange all six plots in a 2-column, 3-row layout\ngrid.arrange(plot_2017, plot_2018, plot_2019, plot_2020, plot_2021, plot_2022, ncol = 2, nrow = 3)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-87-1.png){width=1152}\n:::\n:::\n\n\n\nLocal Indicators of Spatial Association(LISA) interpretation:\n\n-   Clusters\n\n    -   **High-High**: High value area, surrounded by high value neighbours.\n\n    -   **Low-Low**: Low value area, surrounded by low value neightbours.\n\n-   Outliers\n\n    -   **High-Low**: High value area, surrounded by low value neighbours.\n\n    -   **Low-High**: Low value area, surrounded by high value neighbours.\n\nBelow is the code chunk that visualizes the LISA map alongside the drug use case map. I found this side-by-side comparison particularly useful for providing additional context, helping to better understand why specific locations are classified as clusters or outliers.\n\n::: panel-tabset\n## 2017\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nlisa_sig_2017 <- lisa_2017  %>%\n  filter(p_ii_sim < 0.05)\nmap1 <- tm_shape(lisa_2017) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(lisa_sig_2017) +\n  tm_fill(\"median\") + \n  tm_borders(alpha = 0.4)\n\nmap2 <- tm_shape(lisa_2017) +\n  tm_polygons(\"no_cases\",\n          palette = \"Blues\",\n          style=\"quantile\", n=10)\n\ntmap_arrange(map1, map2,ncol=2)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-88-1.png){width=1152}\n:::\n:::\n\n\n\n## 2018\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nlisa_sig_2018 <- lisa_2018  %>%\n  filter(p_ii_sim < 0.05)\n\nmap1 <- tm_shape(lisa_2018) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(lisa_sig_2018) +\n  tm_fill(\"median\") + \n  tm_borders(alpha = 0.4)\n\nmap2 <- tm_shape(lisa_2018) +\n  tm_polygons(\"no_cases\",\n          palette = \"Blues\",\n          style=\"quantile\", n=10)\n\ntmap_arrange(map1, map2,ncol=2)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-89-1.png){width=1152}\n:::\n:::\n\n\n\n## 2019\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nlisa_sig_2019 <- lisa_2019  %>%\n  filter(p_ii_sim < 0.05)\n\nmap1 <- tm_shape(lisa_2019) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(lisa_sig_2019) +\n  tm_fill(\"median\") + \n  tm_borders(alpha = 0.4)\n\nmap2 <- tm_shape(lisa_2019) +\n  tm_polygons(\"no_cases\",\n          palette = \"Blues\",\n          style=\"quantile\", n=10)\n\ntmap_arrange(map1, map2,ncol=2)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-90-1.png){width=1152}\n:::\n:::\n\n\n\n## 2020\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nlisa_sig_2020 <- lisa_2020  %>%\n  filter(p_ii_sim < 0.05)\n\nmap1 <- tm_shape(lisa_2020) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(lisa_sig_2020) +\n  tm_fill(\"median\") + \n  tm_borders(alpha = 0.4)\n\nmap2 <- tm_shape(lisa_2020) +\n  tm_polygons(\"no_cases\",\n          palette = \"Blues\",\n          style=\"quantile\", n=10)\n\ntmap_arrange(map1, map2,ncol=2)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-91-1.png){width=1152}\n:::\n:::\n\n\n\n## 2021\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nlisa_sig_2021 <- lisa_2021  %>%\n  filter(p_ii_sim < 0.05)\n\nmap1 <- tm_shape(lisa_2021) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(lisa_sig_2021) +\n  tm_fill(\"median\") + \n  tm_borders(alpha = 0.4)\n\nmap2 <- tm_shape(lisa_2021) +\n  tm_polygons(\"no_cases\",\n          palette = \"Blues\",\n          style=\"quantile\", n=10)\n\ntmap_arrange(map1, map2,ncol=2)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-92-1.png){width=1152}\n:::\n:::\n\n\n\n## 2022\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nlisa_sig_2022 <- lisa_2022  %>%\n  filter(p_ii_sim < 0.05)\n\nmap1 <- tm_shape(lisa_2022) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(lisa_sig_2022) +\n  tm_fill(\"median\") + \n  tm_borders(alpha = 0.4)\n\nmap2 <- tm_shape(lisa_2022) +\n  tm_polygons(\"no_cases\",\n          palette = \"Blues\",\n          style=\"quantile\", n=10)\n\ntmap_arrange(map1, map2, ncol=2)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-93-1.png){width=1152}\n:::\n:::\n\n\n:::\n\n::: callout-note\n## LISA Insight\n\n-   The LISA map provides a much clearer way to identify clusters, particularly distinguishing between high-value and low-value clusters. This approach simplifies the process compared to the Local Moran's I Test maps we plotted earlier, which required multiple maps and side-by-side comparisons to interpret the spatial patterns. With LISA, clusters are more visually intuitive, making it easier to draw insights from spatial autocorrelation.\n-   Note that since I am using the **median** instead of the **mean**, some provinces in the LISA map appear slightly different from the Local Moran's I test p-value map. I think the difference arises because the median is more robust to skewed data, which may influence the spatial patterns displayed.\n:::\n\n## 5.3 Hot Spot and Code Spot Area Analysis(HCSA) with local Gi\\*\n\nBeside LISA, we can use local Gi\\* statistic to detect hot spots (areas of high values surrounded by high values) and cold spots (areas of low values surrounded by low values). In this analysis, spatial clustering patterns are measured, and locations are classified as hot spots, cold spots, or neutral areas. I will be use local Gi\\*, which will consider itself.\n\n::: callout-warning\nThis analysis is not to identify outliers and need to use distance matrix with all positive value.\n:::\n\nIn the previous sections, I used queen contiguity to define neighbors. Since there are multiple methods for calculating neighbors, I will explore different approaches using the 2017 data to identify the most suitable one for our analysis using HCSA and to gain diverse insights. For the weights, I will continue utilizing `st_inverse_distance`.\n\n-   Queen Contiguity =\\> st_contiguity\n\n-   Neighbors from a distance =\\> st_dist_band\n\n-   K-Nearest Neighbors =\\> st_knn\n\nFirst, we need to derive a spatial weight matrix before computing the local Gi\\* statistics. As the local Gi\\* statistic requires a distance matrix, we use the distance matrix for this purpose.\n\nSince the geometry field in `drug_use_cases` contains multipolygons instead of polygons, I will apply `st_centroid` to extract the central points for each multipolygon. This ensures we can calculate the distances between these central points accurately for the analysis.\n\n::: panel-tabset\n## 2017 - Queen Contiguity\n\nBelow code chunk will compute spatial weight matrix.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nwm_idw_2017 <- drug_use_cases %>%\n  filter(fiscal_year == 2017) %>%\n  mutate(nb = include_self(st_contiguity(geometry)),\n         geometry_centroid = st_centroid(geometry), \n         wts = st_inverse_distance(nb, \n                              geometry_centroid, \n                              scale = 1,\n                              alpha = 1),\n         .before = 1)\n```\n:::\n\n\n\nTo compute the local G\\* and using **set.seed()** to ensure the computation is reproducible.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nset.seed(1234)\nHCSA_2017 <- wm_idw_2017 %>% \n  mutate(local_Gi = local_gstar_perm(\n    no_cases, nb, wts, nsim = 999),\n         .before = 1) %>%\n  unnest(local_Gi)\n```\n:::\n\n\n\nVisualising Gi\\* and p_sim value using tmap at province level.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\ntmap_mode(\"plot\")\nmap1 <- tm_shape(HCSA_2017) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Gi* of Drug Use Cases in 2017\",\n            main.title.size = 0.8)\n\nmap2 <- tm_shape(HCSA_2017) +\n  tm_fill(\"p_sim\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of Gi*\",\n            main.title.size = 0.8)\n\ntmap_arrange(map1, map2, ncol = 2)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-96-1.png){width=1152}\n:::\n:::\n\n\n\nVisualising the significant(p_sim \\< 0.05) HCSA map.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nHCSA_sig_2017 <- HCSA_2017  %>%\n  filter(p_sim < 0.05)\n\nmap1 <- tm_shape(HCSA_2017) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(HCSA_sig_2017) +\n  tm_fill(\"cluster\") + \n  tm_borders(alpha = 0.4)\n\nmap2 <- tm_shape(HCSA_2017) +\n  tm_polygons(\"no_cases\",\n          palette = \"Blues\",\n          style=\"quantile\", n=10)\n\ntmap_arrange(map1, map2,ncol=2)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-97-1.png){width=1152}\n:::\n:::\n\n\n\n## 2017 - Neighbors from a distance\n\nBelow code chunk will compute spatial weight matrix.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nwm_idw_2017_db <- drug_use_cases %>%\n  filter(fiscal_year == 2017) %>%\n  mutate(nb = include_self(st_dist_band(geometry, lower=0)),\n         geometry_centroid = st_centroid(geometry), \n         wts = st_inverse_distance(nb, \n                              geometry_centroid, \n                              scale = 1,\n                              alpha = 1),\n         .before = 1)\n```\n:::\n\n\n\nTo compute the local G\\* and using **set.seed()** to ensure the computation is reproducible.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nset.seed(1234)\nHCSA_2017_db <- wm_idw_2017_db %>% \n  mutate(local_Gi = local_gstar_perm(\n    no_cases, nb, wts, nsim = 999),\n         .before = 1) %>%\n  unnest(local_Gi)\n```\n:::\n\n\n\nVisualising Gi\\* and p_sim value using tmap at province level.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\ntmap_mode(\"plot\")\nmap1 <- tm_shape(HCSA_2017_db) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Gi* of Drug Use Cases in 2017\",\n            main.title.size = 0.8)\n\nmap2 <- tm_shape(HCSA_2017_db) +\n  tm_fill(\"p_sim\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of Gi*\",\n            main.title.size = 0.8)\n\ntmap_arrange(map1, map2, ncol = 2)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-100-1.png){width=1152}\n:::\n:::\n\n\n\nVisualising the significant(p_sim \\< 0.05) HCSA map.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nHCSA_sig_2017_db <- HCSA_2017_db  %>%\n  filter(p_sim < 0.05)\n\nmap1 <- tm_shape(HCSA_2017_db) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(HCSA_sig_2017_db) +\n  tm_fill(\"cluster\") + \n  tm_borders(alpha = 0.4)\n\nmap2 <- tm_shape(HCSA_2017_db) +\n  tm_polygons(\"no_cases\",\n          palette = \"Blues\",\n          style=\"quantile\", n=10)\n\ntmap_arrange(map1, map2,ncol=2)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-101-1.png){width=1152}\n:::\n:::\n\n\n\n## 2017 - K-Nearest Neighbors\n\nBelow code chunk will compute spatial weight matrix.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nwm_idw_2017_k <- drug_use_cases %>%\n  filter(fiscal_year == 2017) %>%\n  mutate(nb = include_self(st_knn(geometry, k = 8)),\n         geometry_centroid = st_centroid(geometry), \n         wts = st_inverse_distance(nb, \n                              geometry_centroid,\n                              scale = 1,\n                              alpha = 1),\n         .before = 1)\n```\n:::\n\n\n\nTo compute the local G\\* and using **set.seed()** to ensure the computation is reproducible.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nset.seed(1234)\nHCSA_2017_k <- wm_idw_2017_k %>% \n  mutate(local_Gi = local_gstar_perm(\n    no_cases, nb, wts, nsim = 999),\n         .before = 1) %>%\n  unnest(local_Gi)\n```\n:::\n\n\n\nVisualising Gi\\* and p_sim value using tmap at province level.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\ntmap_mode(\"plot\")\nmap1 <- tm_shape(HCSA_2017_k) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Gi* of Drug Use Cases in 2017\",\n            main.title.size = 0.8)\n\nmap2 <- tm_shape(HCSA_2017_k) +\n  tm_fill(\"p_sim\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of Gi*\",\n            main.title.size = 0.8)\n\ntmap_arrange(map1, map2, ncol = 2)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-104-1.png){width=1152}\n:::\n:::\n\n\n\nVisualising the significant(p_sim \\< 0.05) HCSA map.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nHCSA_sig_2017_k <- HCSA_2017_k  %>%\n  filter(p_sim < 0.05)\n\nmap1 <- tm_shape(HCSA_2017_k) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(HCSA_sig_2017_k) +\n  tm_fill(\"cluster\") + \n  tm_borders(alpha = 0.4)\n\nmap2 <- tm_shape(HCSA_2017_k) +\n  tm_polygons(\"no_cases\",\n          palette = \"Blues\",\n          style=\"quantile\", n=10)\n\ntmap_arrange(map1, map2,ncol=2)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-105-1.png){width=1152}\n:::\n:::\n\n\n:::\n\n::: callout-tip\n-   Notice that for the HCSA map for Queen Contiguity, is actually every similar with what we have in LISA map, because of the same method on how we define neighbors.\n\n-   For distance-based neighbors, I am using the default upper threshold. From the plot, we can observe that some areas lose local context. For example, the three provinces at the right side of Bangkok all have relatively high `no_cases`, yet one of them is not identified as part of the high cluster.\n\n-   For K-Nearest Neighbors (KNN), the plot accurately represents the central region. However, a potential issue with KNN is that it disregards local context, as it doesn't account for whether neighboring provinces are adjacent. For instance, in the southern region, the provinces are arranged in a line, meaning that using KNN may select neighbors that are quite distant from the province itself. This can result in weaker or misleading spatial autocorrelation patterns.\n\n-   Hence, for the years 2018 to 2022, I will continue using Queen Contiguity to identify neighbors, as it considers all adjacent neighbors, providing a more precise representation of local spatial relationships.\n:::\n\n::: panel-tabset\n## 2018\n\nBelow code chunk will compute spatial weight matrix.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nwm_idw_2018 <- drug_use_cases %>%\n  filter(fiscal_year == 2018) %>%\n  mutate(nb = include_self(st_contiguity(geometry)),\n         geometry_centroid = st_centroid(geometry), \n         wts = st_inverse_distance(nb, \n                              geometry_centroid, \n                              scale = 1,\n                              alpha = 1),\n         .before = 1)\n```\n:::\n\n\n\nTo compute the local G\\* and using **set.seed()** to ensure the computation is reproducible.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nset.seed(1234)\nHCSA_2018 <- wm_idw_2018 %>% \n  mutate(local_Gi = local_gstar_perm(\n    no_cases, nb, wts, nsim = 999),\n         .before = 1) %>%\n  unnest(local_Gi)\n```\n:::\n\n\n\nVisualising Gi\\* and p_sim value using tmap at province level.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\ntmap_mode(\"plot\")\nmap1 <- tm_shape(HCSA_2018) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Gi* of Drug Use Cases in 2018\",\n            main.title.size = 0.8)\n\nmap2 <- tm_shape(HCSA_2018) +\n  tm_fill(\"p_sim\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of Gi*\",\n            main.title.size = 0.8)\n\ntmap_arrange(map1, map2, ncol = 2)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-108-1.png){width=1152}\n:::\n:::\n\n\n\nVisualising the significant(p_sim \\< 0.05) HCSA map.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nHCSA_sig_2018 <- HCSA_2018  %>%\n  filter(p_sim < 0.05)\n\nmap1 <- tm_shape(HCSA_2018) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(HCSA_sig_2018) +\n  tm_fill(\"cluster\") + \n  tm_borders(alpha = 0.4)\n\nmap2 <- tm_shape(HCSA_2018) +\n  tm_polygons(\"no_cases\",\n          palette = \"Blues\",\n          style=\"quantile\", n=10)\n\ntmap_arrange(map1, map2,ncol=2)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-109-1.png){width=1152}\n:::\n:::\n\n\n\n## 2019\n\nBelow code chunk will compute spatial weight matrix.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nwm_idw_2019 <- drug_use_cases %>%\n  filter(fiscal_year == 2019) %>%\n  mutate(nb = include_self(st_contiguity(geometry)),\n         geometry_centroid = st_centroid(geometry), \n         wts = st_inverse_distance(nb, \n                              geometry_centroid, \n                              scale = 1,\n                              alpha = 1),\n         .before = 1)\n```\n:::\n\n\n\nTo compute the local G\\* and using **set.seed()** to ensure the computation is reproducible.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nset.seed(1234)\nHCSA_2019 <- wm_idw_2019 %>% \n  mutate(local_Gi = local_gstar_perm(\n    no_cases, nb, wts, nsim = 999),\n         .before = 1) %>%\n  unnest(local_Gi)\n```\n:::\n\n\n\nVisualising Gi\\* and p_sim value using tmap at province level.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\ntmap_mode(\"plot\")\nmap1 <- tm_shape(HCSA_2019) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Gi* of Drug Use Cases in 2019\",\n            main.title.size = 0.8)\n\nmap2 <- tm_shape(HCSA_2019) +\n  tm_fill(\"p_sim\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of Gi*\",\n            main.title.size = 0.8)\n\ntmap_arrange(map1, map2, ncol = 2)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-112-1.png){width=1152}\n:::\n:::\n\n\n\nVisualising the significant(p_sim \\< 0.05) HCSA map.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nHCSA_sig_2019 <- HCSA_2019  %>%\n  filter(p_sim < 0.05)\n\nmap1 <- tm_shape(HCSA_2019) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(HCSA_sig_2019) +\n  tm_fill(\"cluster\") + \n  tm_borders(alpha = 0.4)\n\nmap2 <- tm_shape(HCSA_2019) +\n  tm_polygons(\"no_cases\",\n          palette = \"Blues\",\n          style=\"quantile\", n=10)\n\ntmap_arrange(map1, map2,ncol=2)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-113-1.png){width=1152}\n:::\n:::\n\n\n\n## 2020\n\nBelow code chunk will compute spatial weight matrix.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nwm_idw_2020 <- drug_use_cases %>%\n  filter(fiscal_year == 2020) %>%\n  mutate(nb = include_self(st_contiguity(geometry)),\n         geometry_centroid = st_centroid(geometry), \n         wts = st_inverse_distance(nb, \n                              geometry_centroid, \n                              scale = 1,\n                              alpha = 1),\n         .before = 1)\n```\n:::\n\n\n\nTo compute the local G\\* and using **set.seed()** to ensure the computation is reproducible.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nset.seed(1234)\nHCSA_2020 <- wm_idw_2020 %>% \n  mutate(local_Gi = local_gstar_perm(\n    no_cases, nb, wts, nsim = 999),\n         .before = 1) %>%\n  unnest(local_Gi)\n```\n:::\n\n\n\nVisualising Gi\\* and p_sim value using tmap at province level.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\ntmap_mode(\"plot\")\nmap1 <- tm_shape(HCSA_2020) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Gi* of Drug Use Cases in 2020\",\n            main.title.size = 0.8)\n\nmap2 <- tm_shape(HCSA_2020) +\n  tm_fill(\"p_sim\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of Gi*\",\n            main.title.size = 0.8)\n\ntmap_arrange(map1, map2, ncol = 2)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-116-1.png){width=1152}\n:::\n:::\n\n\n\nVisualising the significant(p_sim \\< 0.05) HCSA map.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nHCSA_sig_2020 <- HCSA_2020  %>%\n  filter(p_sim < 0.05)\n\nmap1 <- tm_shape(HCSA_2020) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(HCSA_sig_2020) +\n  tm_fill(\"cluster\") + \n  tm_borders(alpha = 0.4)\n\nmap2 <- tm_shape(HCSA_2020) +\n  tm_polygons(\"no_cases\",\n          palette = \"Blues\",\n          style=\"quantile\", n=10)\n\ntmap_arrange(map1, map2,ncol=2)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-117-1.png){width=1152}\n:::\n:::\n\n\n\n## 2021\n\nBelow code chunk will compute spatial weight matrix.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nwm_idw_2021 <- drug_use_cases %>%\n  filter(fiscal_year == 2021) %>%\n  mutate(nb = include_self(st_contiguity(geometry)),\n         geometry_centroid = st_centroid(geometry), \n         wts = st_inverse_distance(nb, \n                              geometry_centroid, \n                              scale = 1,\n                              alpha = 1),\n         .before = 1)\n```\n:::\n\n\n\nTo compute the local G\\* and using **set.seed()** to ensure the computation is reproducible.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nset.seed(1234)\nHCSA_2021 <- wm_idw_2021 %>% \n  mutate(local_Gi = local_gstar_perm(\n    no_cases, nb, wts, nsim = 999),\n         .before = 1) %>%\n  unnest(local_Gi)\n```\n:::\n\n\n\nVisualising Gi\\* and p_sim value using tmap at province level.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\ntmap_mode(\"plot\")\nmap1 <- tm_shape(HCSA_2021) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Gi* of Drug Use Cases in 2021\",\n            main.title.size = 0.8)\n\nmap2 <- tm_shape(HCSA_2021) +\n  tm_fill(\"p_sim\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of Gi*\",\n            main.title.size = 0.8)\n\ntmap_arrange(map1, map2, ncol = 2)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-120-1.png){width=1152}\n:::\n:::\n\n\n\nVisualising the significant(p_sim \\< 0.05) HCSA map.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nHCSA_sig_2021 <- HCSA_2021  %>%\n  filter(p_sim < 0.05)\n\nmap1 <- tm_shape(HCSA_2021) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(HCSA_sig_2021) +\n  tm_fill(\"cluster\") + \n  tm_borders(alpha = 0.4)\n\nmap2 <- tm_shape(HCSA_2021) +\n  tm_polygons(\"no_cases\",\n          palette = \"Blues\",\n          style=\"quantile\", n=10)\n\ntmap_arrange(map1, map2,ncol=2)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-121-1.png){width=1152}\n:::\n:::\n\n\n\n## 2022\n\nBelow code chunk will compute spatial weight matrix.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nwm_idw_2022 <- drug_use_cases %>%\n  filter(fiscal_year == 2022) %>%\n  mutate(nb = include_self(st_contiguity(geometry)),\n         geometry_centroid = st_centroid(geometry), \n         wts = st_inverse_distance(nb, \n                              geometry_centroid, \n                              scale = 1,\n                              alpha = 1),\n         .before = 1)\n```\n:::\n\n\n\nTo compute the local G\\* and using **set.seed()** to ensure the computation is reproducible.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nset.seed(1234)\nHCSA_2022 <- wm_idw_2022 %>% \n  mutate(local_Gi = local_gstar_perm(\n    no_cases, nb, wts, nsim = 999),\n         .before = 1) %>%\n  unnest(local_Gi)\n```\n:::\n\n\n\nVisualising Gi\\* and p_sim value using tmap at province level.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\ntmap_mode(\"plot\")\nmap1 <- tm_shape(HCSA_2022) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"Gi* of Drug Use Cases in 2022\",\n            main.title.size = 0.8)\n\nmap2 <- tm_shape(HCSA_2022) +\n  tm_fill(\"p_sim\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of Gi*\",\n            main.title.size = 0.8)\n\ntmap_arrange(map1, map2, ncol = 2)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-124-1.png){width=1152}\n:::\n:::\n\n\n\nVisualising the significant(p_sim \\< 0.05) HCSA map.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nHCSA_sig_2022 <- HCSA_2022  %>%\n  filter(p_sim < 0.05)\n\nmap1 <- tm_shape(HCSA_2022) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(HCSA_sig_2022) +\n  tm_fill(\"cluster\") + \n  tm_borders(alpha = 0.4)\n\nmap2 <- tm_shape(HCSA_2022) +\n  tm_polygons(\"no_cases\",\n          palette = \"Blues\",\n          style=\"quantile\", n=10)\n\ntmap_arrange(map1, map2,ncol=2)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-125-1.png){width=1152}\n:::\n:::\n\n\n:::\n\n::: callout-tip\n## HCSA Insight\n\n-   In 2017, there were two cold spot areas—one located above Bangkok and another surrounding the city. Notably, the cold spot area above Bangkok coincided with the Low-Low cluster identified in the LISA map.\n\n-   By 2018, the cold spot above Bangkok had disappeared, while the area around Bangkok persisted. However, one province transitioned from a cold spot to a hot spot during this period.\n\n-   In 2019, only one province remained as a cold spot around Bangkok, down from three provinces in 2018, while a new cold spot emerged in a province to the north. Additionally, the number of hot spots surrounding Bangkok increased.\n\n-   In 2020, a new cold spot area appeared slightly above Bangkok, leaving only one province as a hot spot in the region.\n\n-   By 2021, the hot spots had vanished, and a large cold spot area emerged to the left of Bangkok.\n\n-   In 2022, the cold spot areas were reduced to two provinces, while a new hot spot emerged in the northern region.\n:::\n\n# 6. Emerging Hot Spot Analysis (EHSA)\n\nIn this section, I will explore how to perform **Emerging Hot Spot Analysis (EHSA)** on the current dataset.\n\nEHSA is an exploratory spatial data analysis (ESDA) technique that integrates traditional hot spot analysis, using the Getis-Ord Gi\\* statistic, with the time-series **Mann-Kendall test** for detecting monotonic trends.\n\nBy applying EHSA, I can assess how hot and cold spots evolve over time. I will begin by conducting the **Mann-Kendall test** to identify trends from 2017 to 2022, followed by the EHSA to analyze these spatial-temporal patterns.\n\nFirst, I need to create a space-time cube to move forward with the analysis. The code snippet below will accomplish this task.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nspt <- as_spacetime(drug_use_cases, \"province_en\", \"fiscal_year\")\nis_spacetime_cube(spt)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] TRUE\n```\n\n\n:::\n:::\n\n\n\n## 6.1 Mann-Kendall Test\n\nThe Mann-Kendall test for trend is a statistical method used to evaluate whether a dataset exhibits a significant upward or downward trend over time. This non-parametric test is versatile, as it does not assume the data follows a normal distribution, making it applicable to a wide range of data types. However, it is important that the data is free of **serial correlation**(AKA autocorrelation) for the test to be valid. If the data does follow a normal distribution, simple linear regression can be used as an alternative to assess trends.\n\nThe Hypothesis:\n\n-   **Null hypothesis**: There is no monotonic trend in the series.\n\n-   **Alternate hypothesis**: A trend exists. This trend can be positive, negative, or non-null.\n\nBased on the HCSA section plot, I observed that from 2017 to 2020, the primary hot and cold spots were concentrated around Bangkok. However, in 2021 and 2022, a major hotspot emerged in the central-west region. As a result, I will conduct the Mann-Kendall test to examine the trends in the five provinces surrounding Bangkok: **Chachoengsao (1), Pathum Thani (2), Nonthaburi (3), Samut Sakhon (4),** and **Samut Prakan (5).**\n\n![](website_img/bangkok_surrounding.jpg){fig-align=\"center\" width=\"450\"}\n\nTo compute spatial weight matrix of all years.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwm_idw <- spt %>%\n  activate(\"geometry\") %>%\n  mutate(nb = include_self(st_contiguity(geometry)),\n         geometry_centroid = st_centroid(geometry), \n         wt = st_inverse_distance(nb, \n                              geometry_centroid, \n                              scale = 1,\n                              alpha = 1),\n         .before = 1) %>%\n  set_nbs(\"nb\") %>%\n  set_wts(\"wt\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(wm_idw)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                province_en fiscal_year types_of_drug_offenses no_cases\n1                   Bangkok        2017         drug_use_cases    11871\n7              Samut Prakan        2017         drug_use_cases      820\n13               Nonthaburi        2017         drug_use_cases      553\n19             Pathum Thani        2017         drug_use_cases      450\n25 Phra Nakhon Si Ayutthaya        2017         drug_use_cases      378\n31                Ang Thong        2017         drug_use_cases      208\n                          nb\n1     1, 2, 3, 4, 15, 59, 60\n7                   1, 2, 15\n13            1, 3, 4, 5, 59\n19    1, 3, 4, 5, 10, 15, 17\n25 3, 4, 5, 6, 7, 10, 58, 59\n31            5, 6, 7, 8, 58\n                                                                                               wt\n1              0.00000000, 0.04623058, 0.03320981, 0.03009409, 0.01128737, 0.01703632, 0.02007676\n7                                                              0.04623058, 0.00000000, 0.01293165\n13                                     0.03320981, 0.00000000, 0.02860959, 0.02040690, 0.03198346\n19             0.03009409, 0.02860959, 0.00000000, 0.02825561, 0.01387401, 0.01051713, 0.01806330\n25 0.02040690, 0.02825561, 0.00000000, 0.02747784, 0.01062597, 0.01629943, 0.01341095, 0.01530443\n31                                     0.02747784, 0.00000000, 0.01240505, 0.03112161, 0.02033245\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nclass(wm_idw$nb)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"list\"\n```\n\n\n:::\n:::\n\n\n\nNotices that the class of the `nb` field has changed to a list instead of a neighbors list due to the `set_nbs` function in the spacetime. The code snippet below will convert this field back into a neighbors list.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nclass(wm_idw$nb) <- c(\"nb\", \"list\")\nclass(wm_idw$nb)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"nb\"   \"list\"\n```\n\n\n:::\n:::\n\n\n\nTo compute the local G\\* and using **set.seed()** to ensure it is reproducible.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\nlocal_g_star_years <- wm_idw %>%\n  group_by(fiscal_year) %>%\n  mutate(local_Gi = local_gstar_perm(\n    no_cases, nb, wt,nsim = 999),\n    .before = 1) %>%\n  unnest(local_Gi)\n```\n:::\n\n\n\nFilter the 5 province data.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncha_gs <- local_g_star_years%>%\n  filter(province_en == \"Chachoengsao\") |>\n  select(province_en, fiscal_year, gi_star)\n\npt_gs <- local_g_star_years%>%\n  filter(province_en == \"Pathum Thani\") |>\n  select(province_en, fiscal_year, gi_star)\n\nnon_gs <- local_g_star_years%>%\n  filter(province_en == \"Nonthaburi\") |>\n  select(province_en, fiscal_year, gi_star)\n\nss_gs <- local_g_star_years%>%\n  filter(province_en == \"Samut Sakhon\") |>\n  select(province_en, fiscal_year, gi_star)\n\nsp_gs <- local_g_star_years%>%\n  filter(province_en == \"Samut Prakan\") |>\n  select(province_en, fiscal_year, gi_star)\n```\n:::\n\n\n\nLets visualize the trend of the G\\* value of the 5 province surrounding Bangkok\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\np_mkt <- ggplot() +\n  geom_line(data = cha_gs, mapping = aes(x = fiscal_year, y = gi_star, color = \"Chachoengsao\")) +\n  geom_line(data = pt_gs, mapping = aes(x = fiscal_year, y = gi_star, color = \"Pathum Thani\")) + \n  geom_line(data = non_gs, mapping = aes(x = fiscal_year, y = gi_star, color = \"Nonthaburi\")) + \n  geom_line(data = ss_gs, mapping = aes(x = fiscal_year, y = gi_star, color = \"Samut Sakhon\")) + \n  geom_line(data = sp_gs, mapping = aes(x = fiscal_year, y = gi_star, color = \"Samut Prakan\")) + \n  labs(x = \"Year\", y = \"Gi* Value\", \n       title = \"Gi* value of the five province surrounding Bangkok\",\n       color = \"Province\")\n\nplotly::ggplotly(p_mkt)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-393fe3fc10f577a7aae3\" style=\"width:100%;height:541px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-393fe3fc10f577a7aae3\">{\"x\":{\"data\":[{\"x\":[2017,2018,2019,2020,2021,2022],\"y\":[3.526668588064295,3.1684691137678795,2.9089163493544956,2.7836577354964631,1.2000576962627958,0.035813961550049372],\"text\":[\"fiscal_year: 2017<br />gi_star: 3.52666859<br />colour: Chachoengsao\",\"fiscal_year: 2018<br />gi_star: 3.16846911<br />colour: Chachoengsao\",\"fiscal_year: 2019<br />gi_star: 2.90891635<br />colour: Chachoengsao\",\"fiscal_year: 2020<br />gi_star: 2.78365774<br />colour: Chachoengsao\",\"fiscal_year: 2021<br />gi_star: 1.20005770<br />colour: Chachoengsao\",\"fiscal_year: 2022<br />gi_star: 0.03581396<br />colour: Chachoengsao\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(248,118,109,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"name\":\"Chachoengsao\",\"legendgroup\":\"Chachoengsao\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[2017,2018,2019,2020,2021,2022],\"y\":[1.9368533112656254,2.0409883757729115,1.8370645291438721,1.0036423283927238,0.26154382403134757,-0.55955429204098672],\"text\":[\"fiscal_year: 2017<br />gi_star:  1.9368533<br />colour: Pathum Thani\",\"fiscal_year: 2018<br />gi_star:  2.0409884<br />colour: Pathum Thani\",\"fiscal_year: 2019<br />gi_star:  1.8370645<br />colour: Pathum Thani\",\"fiscal_year: 2020<br />gi_star:  1.0036423<br />colour: Pathum Thani\",\"fiscal_year: 2021<br />gi_star:  0.2615438<br />colour: Pathum Thani\",\"fiscal_year: 2022<br />gi_star: -0.5595543<br />colour: Pathum Thani\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(0,191,125,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"name\":\"Pathum Thani\",\"legendgroup\":\"Pathum Thani\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[2017,2018,2019,2020,2021,2022],\"y\":[2.3312731243090452,2.7238736979328473,2.310907146241278,1.3487312875037201,0.52926564010987465,-0.255899817893398],\"text\":[\"fiscal_year: 2017<br />gi_star:  2.3312731<br />colour: Nonthaburi\",\"fiscal_year: 2018<br />gi_star:  2.7238737<br />colour: Nonthaburi\",\"fiscal_year: 2019<br />gi_star:  2.3109071<br />colour: Nonthaburi\",\"fiscal_year: 2020<br />gi_star:  1.3487313<br />colour: Nonthaburi\",\"fiscal_year: 2021<br />gi_star:  0.5292656<br />colour: Nonthaburi\",\"fiscal_year: 2022<br />gi_star: -0.2558998<br />colour: Nonthaburi\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(163,165,0,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"name\":\"Nonthaburi\",\"legendgroup\":\"Nonthaburi\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[2017,2018,2019,2020,2021,2022],\"y\":[2.6093891696617542,2.4918369864809615,1.6083192047860067,0.97089011833774563,-0.91390277978978351,-0.84516735607807247],\"text\":[\"fiscal_year: 2017<br />gi_star:  2.6093892<br />colour: Samut Sakhon\",\"fiscal_year: 2018<br />gi_star:  2.4918370<br />colour: Samut Sakhon\",\"fiscal_year: 2019<br />gi_star:  1.6083192<br />colour: Samut Sakhon\",\"fiscal_year: 2020<br />gi_star:  0.9708901<br />colour: Samut Sakhon\",\"fiscal_year: 2021<br />gi_star: -0.9139028<br />colour: Samut Sakhon\",\"fiscal_year: 2022<br />gi_star: -0.8451674<br />colour: Samut Sakhon\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(231,107,243,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"name\":\"Samut Sakhon\",\"legendgroup\":\"Samut Sakhon\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[2017,2018,2019,2020,2021,2022],\"y\":[3.7343839095957074,4.0069919871022357,3.8268052781330111,2.5899000901491753,1.4177342322683475,0.69894109769285084],\"text\":[\"fiscal_year: 2017<br />gi_star: 3.7343839<br />colour: Samut Prakan\",\"fiscal_year: 2018<br />gi_star: 4.0069920<br />colour: Samut Prakan\",\"fiscal_year: 2019<br />gi_star: 3.8268053<br />colour: Samut Prakan\",\"fiscal_year: 2020<br />gi_star: 2.5899001<br />colour: Samut Prakan\",\"fiscal_year: 2021<br />gi_star: 1.4177342<br />colour: Samut Prakan\",\"fiscal_year: 2022<br />gi_star: 0.6989411<br />colour: Samut Prakan\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(0,176,246,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"name\":\"Samut Prakan\",\"legendgroup\":\"Samut Prakan\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null}],\"layout\":{\"margin\":{\"t\":42.301369863013697,\"r\":7.3059360730593621,\"b\":38.721461187214615,\"l\":37.260273972602747},\"plot_bgcolor\":\"rgba(235,235,235,1)\",\"paper_bgcolor\":\"rgba(255,255,255,1)\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724},\"title\":{\"text\":\"Gi* value of the five province surrounding Bangkok\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":17.534246575342465},\"x\":0,\"xref\":\"paper\"},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[2016.75,2022.25],\"tickmode\":\"array\",\"ticktext\":[\"2017\",\"2018\",\"2019\",\"2020\",\"2021\",\"2022\"],\"tickvals\":[2017,2018,2019,2020,2021,2022],\"categoryorder\":\"array\",\"categoryarray\":[\"2017\",\"2018\",\"2019\",\"2020\",\"2021\",\"2022\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(51,51,51,1)\",\"ticklen\":3.6529680365296811,\"tickwidth\":0.66417600664176002,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(255,255,255,1)\",\"gridwidth\":0.66417600664176002,\"zeroline\":false,\"anchor\":\"y\",\"title\":{\"text\":\"Year\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[-1.1599475181343846,4.2530367254468366],\"tickmode\":\"array\",\"ticktext\":[\"-1\",\"0\",\"1\",\"2\",\"3\",\"4\"],\"tickvals\":[-1,0,1,2,2.9999999999999996,3.9999999999999996],\"categoryorder\":\"array\",\"categoryarray\":[\"-1\",\"0\",\"1\",\"2\",\"3\",\"4\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(51,51,51,1)\",\"ticklen\":3.6529680365296811,\"tickwidth\":0.66417600664176002,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(255,255,255,1)\",\"gridwidth\":0.66417600664176002,\"zeroline\":false,\"anchor\":\"x\",\"title\":{\"text\":\"Gi* Value\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"shapes\":[{\"type\":\"rect\",\"fillcolor\":null,\"line\":{\"color\":null,\"width\":0,\"linetype\":[]},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":1,\"y0\":0,\"y1\":1}],\"showlegend\":true,\"legend\":{\"bgcolor\":\"rgba(255,255,255,1)\",\"bordercolor\":\"transparent\",\"borderwidth\":1.8897637795275593,\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":11.68949771689498},\"title\":{\"text\":\"Province\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}}},\"hovermode\":\"closest\",\"barmode\":\"relative\"},\"config\":{\"doubleClick\":\"reset\",\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"source\":\"A\",\"attrs\":{\"181717190c976\":{\"x\":{},\"y\":{},\"colour\":{},\"type\":\"scatter\"},\"18171589a9c39\":{\"x\":{},\"y\":{},\"colour\":{}},\"18171e868fa1\":{\"x\":{},\"y\":{},\"colour\":{}},\"18171243f9a7a\":{\"x\":{},\"y\":{},\"colour\":{}},\"181714bb6d22d\":{\"x\":{},\"y\":{},\"colour\":{}}},\"cur_data\":\"181717190c976\",\"visdat\":{\"181717190c976\":[\"function (y) \",\"x\"],\"18171589a9c39\":[\"function (y) \",\"x\"],\"18171e868fa1\":[\"function (y) \",\"x\"],\"18171243f9a7a\":[\"function (y) \",\"x\"],\"181714bb6d22d\":[\"function (y) \",\"x\"]},\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n::: callout-tip\n## Insight\n\n-   We can observed that the Gi\\* value of the five province are having a negative trend(from hot spot to cold spot) suggests that there is a tendency for the drug use cases around Bangkok decrease over time.\n:::\n\n## 6.2 Plotting EHSA\n\nWe can perform EHSA analysis by using `emerging_hotspot_analysis()` of **sfdep** package. It will takes a spacetime object named `spt` which I created at the start of this section. `.var` is the numeric vector in the spactime cube. Arguments `k` is to define the number of time lags to include in the neighborhood for calculating the local Gi\\*. `nsim` is the number of simulations to run in calculating the simulated p-value for the local Gi\\*.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\nEHSA <- emerging_hotspot_analysis(\n  x = spt, \n  .var = \"no_cases\", \n  k = 1, \n  nsim = 999\n)\n```\n:::\n\n\n\n### 6.2.1 Visualizing the EHSA\n\nBefore, we plot the EHSA map, lets plot a bar graph to see the distribution of the EHSA using **ggplot2**.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = EHSA,\n       aes(y = classification,fill = classification)) +\n  geom_bar(show.legend = FALSE)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-135-1.png){width=672}\n:::\n:::\n\n\n\nBefore, we can plot the EHSA map, we need to perform left join with the Thailand sf object, as there is no geometry field in the EHSA .\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(EHSA)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                  location        tau   p_value      classification\n1                  Bangkok  0.3333333 0.4523704 no pattern detected\n2             Samut Prakan -0.3333333 0.4523704   sporadic coldspot\n3               Nonthaburi  0.2000000 0.7071142    sporadic hotspot\n4             Pathum Thani  0.3333333 0.4523704 no pattern detected\n5 Phra Nakhon Si Ayutthaya  0.3333333 0.4523704 no pattern detected\n6                Ang Thong  0.3333333 0.4523704    sporadic hotspot\n```\n\n\n:::\n:::\n\n\n\nThe following code chunk uses the `left_join()` function from the **dplyr** package. Since the two variables do not have a common field name, we specify the corresponding fields manually for the join.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nthailand_ehsa <- left_join(thailand_sf, EHSA,  by = join_by(province_en == location))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(thailand_ehsa)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 6 features and 4 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 100.1913 ymin: 13.47842 xmax: 100.9639 ymax: 14.80246\nGeodetic CRS:  WGS 84\n               province_en        tau   p_value      classification\n1                  Bangkok  0.3333333 0.4523704 no pattern detected\n2             Samut Prakan -0.3333333 0.4523704   sporadic coldspot\n3               Nonthaburi  0.2000000 0.7071142    sporadic hotspot\n4             Pathum Thani  0.3333333 0.4523704 no pattern detected\n5 Phra Nakhon Si Ayutthaya  0.3333333 0.4523704 no pattern detected\n6                Ang Thong  0.3333333 0.4523704    sporadic hotspot\n                        geometry\n1 MULTIPOLYGON (((100.6139 13...\n2 MULTIPOLYGON (((100.7306 13...\n3 MULTIPOLYGON (((100.3415 14...\n4 MULTIPOLYGON (((100.8916 14...\n5 MULTIPOLYGON (((100.5131 14...\n6 MULTIPOLYGON (((100.3332 14...\n```\n\n\n:::\n:::\n\n\n\nBefore plotting the map, we should typically only display provinces that are statistically significant (p-value \\< 0.05). However, since it appears that all the provinces have p-values greater than 0.05, I will proceed with plotting the entire EHSA data with filtering of p-value \\< 0.1 instead.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nthailand_ehsa_sig_0.05 <- thailand_ehsa  %>%\n  filter(p_value < 0.05)\ncount(thailand_ehsa_sig_0.05)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 1 feature and 1 field (with 1 geometry empty)\nGeometry type: GEOMETRYCOLLECTION\nDimension:     XY\nBounding box:  xmin: NA ymin: NA xmax: NA ymax: NA\nGeodetic CRS:  WGS 84\n  n                 geometry\n1 0 GEOMETRYCOLLECTION EMPTY\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nthailand_ehsa_sig_0.1 <- thailand_ehsa  %>%\n  filter(p_value < 0.1)\ncount(thailand_ehsa_sig_0.1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 1 feature and 1 field\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 98.67082 ymin: 12.50787 xmax: 101.7197 ymax: 18.70837\nGeodetic CRS:  WGS 84\n  n                       geometry\n1 5 MULTIPOLYGON (((100.4275 15...\n```\n\n\n:::\n:::\n\n\n\nNow lets, plot the EHSA map using `tmap` functions.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode(\"plot\")  \ntm_shape(thailand_ehsa)+\n  tm_polygons()+\n  tm_borders(col = \"black\", alpha = 0.6)+\ntm_shape(thailand_ehsa_sig_0.1)+\n  tm_fill(\"classification\", \n          palette = \"Set1\",\n          title = \"classification\",\n          midpoint = 0) +\n  tm_borders(col = \"black\", alpha = 0.6)+\n  tm_layout(main.title = \"EHSA of Thailand Drug Use Cases\",\n            main.title.position = \"center\",\n            main.title.size = 1.7,\n            main.title.fontface = \"bold\",\n            legend.title.size = 1.8,\n            legend.text.size = 1.3,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", text.size = 1.5, size = 3, position=c(\"RIGHT\", \"TOP\")) +\n  tm_scale_bar(position=c(\"LEFT\", \"BOTTOM\"), text.size=1.2)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-141-1.png){width=1152}\n:::\n:::\n\n\n\n::: callout-tip\n## EHSA Insights\n\n-   Notice that, even when I raise the p-value threshold to 0.1, only five provinces are identified.\n\n-   I believe the potential reason for this may be that the distribution of drug use cases does not exhibit strong spatial clustering. This means there are no distinct areas where cases are significantly higher or lower than expected, which could be why the EHSA results show high p-values.\n:::\n\n# 7. Conclusions & Thoughts\n\nThe analysis of spatial autocorrelation and clustering for drug use cases across different years has provided valuable insights into the spatial patterns of drug offenses.\n\nFor **Global Moran’s I**, from 2017 to 2019, there was an increasing I value and decreasing p-value trend, though p-values remained above 0.05, indicating insufficient evidence to reject the null hypothesis of randomness. In 2020, the trend reversed, suggesting a more random distribution, likely due to the impact of COVID-19. However, in 2021 and 2022, we found enough evidence to infer weak spatial clustering.\n\nSimilarly, **Global Geary’s C** reflected these trends, with 2021 showing some discrepancy, where clustering was suggested by the actual p-value, but the simulated p-value indicated weaker evidence. By 2022, there was clear spatial autocorrelation, suggesting clustering.\n\nThe **LISA** analysis provided clearer visual evidence of clustering, effectively highlighting areas of high and low-value clusters. This method offered a more intuitive way to interpret spatial patterns compared to previous Local Moran’s I test maps. The use of the median, rather than the mean, in the LISA map provided a more robust representation of the data, revealing slight differences in the clustering patterns.\n\nThe **HCSA** insights demonstrated dynamic shifts in hot and cold spot areas over the years. While cold spots near Bangkok were prominent in 2017, they diminished over time, only to reappear or transition into new locations. Hot spots also fluctuated, disappearing in 2021 before reemerging in 2022 in the northern region.\n\nFinally, the **EHSA** results indicated that the distribution of drug use cases may not exhibit strong spatial clustering, as evidenced by the high p-values. Even with a relaxed p-value threshold of 0.1, only a few provinces showed significant clustering, suggesting a more random or dispersed distribution of drug use cases across the region.\n\nOverall, the results from Global Moran’s I, Geary’s C, LISA, HCSA and EHSA tests provide a nuanced picture of the spatial distribution of drug use cases in Thailand. While spatial clustering is evident in some years, overall, the data suggests a generally dispersed pattern, with weaker clustering in more recent years(2021 and 2022).\n\nUnlike the first take-home exercise, this one went much more smoothly as I became more familiar with R. The in-class exercise 6 provided was particularly helpful in guiding me through the process, and by reviewing exercises from seniors in previous semesters provided valuable insight into what was expected for this exercise. Both resources played a key role in helping me complete the assignment efficiently.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<script src=\"../../site_libs/plotly-binding-4.10.4/plotly.js\"></script>\n<script src=\"../../site_libs/typedarray-0.1/typedarray.min.js\"></script>\n<script src=\"../../site_libs/jquery-3.5.1/jquery.min.js\"></script>\n<link href=\"../../site_libs/crosstalk-1.2.1/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/crosstalk-1.2.1/js/crosstalk.min.js\"></script>\n<link href=\"../../site_libs/plotly-htmlwidgets-css-2.11.1/plotly-htmlwidgets.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/plotly-main-2.11.1/plotly-latest.min.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}